<!doctype html>
<html lang="it">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <title>Hello, world!</title>
  </head>
  <body>
    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <div class="container pb-5">
        <!--esercizio 1 -->
    <div>
        <div class="fw-bold">
            1. Dichiarare una variabile valorizzandola con il nostro nome. Dichiarare un'altra variabile valorizzandola con il nostro cognome. Stampare il nostro nome e cognome all'interno di un tag h2. 
        </div>
        @{
            string nome = "Alessandro";
            string cognome = "Di Nardo";
        }
        <h2>@nome @cognome</h2><br />
    </div>

    <!--esercizio 2 -->
    <div>
        <div class="fw-bold">
            2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso). Stampare dentro uno span il risultato. 
        </div> 

        @{
            int SommaNumeri(int num)
            {
                int somma = 0;
                for (int i = 1; i <= num; i++)
                {
                    somma += i;
                }
                return somma;
            }
        }
        
        <div>Risulatato = @SommaNumeri(5)</div>

        @{
            int StampaNumeri(int num)
            {
                int i;
                for ( i = 1; i < num; i++)
                {
                    <span>@i + </span>
                }
                return i;
            }
        }
        <div>Numeri: @StampaNumeri(5)</div>
        <br />
    </div>

    <!--esercizio 3 -->
    <div>
        <div class="fw-bold">
            3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina
        </div> 
        @{ 
            string poesia = "nel mezzo del cammin di nostra vita";
            int count = poesia.Split('a').Length - 1; 
         }
            <div>Questa stringa contiene la lettera A: @count volte.</div>
            <br />

    </div>

    <!--esercizio 4 -->
    <div>
        <div class="fw-bold">
            4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70
        </div>

        @{
            List<int> listanum = new List<int>();
            for(int i=0;i < 20; i++)
            {
                Random rnd = new Random();
                int number;
                do
                {
                    number = rnd.Next(1, 91);
                } while (listanum.Contains(number));
                listanum.Add(number);
            }
            var lista = @listanum.Where(n => n >= 20 && n <= 70);
        }
           
        <ul>
            @foreach(int n in lista)
            {
                <li>@n</li>
            }
        </ul>
        <br />
    </div>

    <!--esercizio 5 -->
    <div>
        <div class="fw-bold">
            5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi.
        </div>

        @{ 
            var dataEOraAttuale = DateTime.Now.ToString();
        }

        <div>Questa è la data e ora attuale @dataEOraAttuale</div>
        <br />

    </div>

    <!--esercizio 6 -->
    <div>
        <div class="fw-bold">
            6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina:
            <ul>
                <li> a. la data di 7 giorni fa</li>
                <li> b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)</li>
                <li> c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)</li>
            </ul>
        </div>

        @{
            DateTime dataAttuale = DateTime.Now;
            DateTime dataTraUnAnno = dataAttuale.AddYears(1);
        }

        <ul>
            <li> a. 7 giorni fa alla data di oggi era il: @dataAttuale.AddDays(-7).</li>
            <li> b. La data di 7 giorni fa è : @dataAttuale.ToString("ddd").</li>
            <li> c. Il giorno della settimana tra un anno è: @dataTraUnAnno.ToString("ddd").</li>
        </ul>
    </div>
    </div>
</body>
</html>